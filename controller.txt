//cinema

package com.example.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.model.Cinema;
import com.example.repository.CinemaRepository;

@RestController
@RequestMapping("/cinemas")

public class CinemaController {
	
	@Autowired
   CinemaRepository cinemaRepository;
	
	
	@GetMapping
	public ResponseEntity<List<Cinema>> getAllCinemas(){
		List<Cinema> cList = new ArrayList<>();
		cinemaRepository.findAll().forEach(cList::add);
		return new ResponseEntity<List<Cinema>>(cList,HttpStatus.OK);
	}
}
//@PostMapping
//public String createNewCinema(@RequestBody Cinema cinema ) {
//	cinemaRepository.save(cinema);
//	return "Cinema Created in database";
//	
//}





..........................................................
//movie
package com.example.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.example.model.Movie;
import com.example.repository.MovieRepository;

@RestController
@RequestMapping("/movies")

public class MovieController {
	
	@Autowired
	   MovieRepository movieRepository;
	@GetMapping
	public ResponseEntity<List<Movie>> getAllMovies(){
		List<Movie> mList = new ArrayList<>();
		movieRepository.findAll().forEach(mList::add);
		return new ResponseEntity<List<Movie>>(mList,HttpStatus.OK);
	}
	
}

//@PostMapping("/movies")
//public String createNewMovie(@RequestBody Movie movie ) {
//	movieRepository.save(movie);
//	return "Movie Added to the  database";		
//}

.................................................................

//Booking
package com.example.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.model.Booking;
import com.example.repository.BookingRepository;

@RestController
@RequestMapping("/booking")
public class BookingController {
	
	@Autowired
	BookingRepository bookingRepository;
	
	@GetMapping
	public ResponseEntity<List<Booking>> getAllBookings(){
		List<Booking> bList = new ArrayList<>();
		bookingRepository.findAll().forEach(bList::add);
		return new ResponseEntity<List<Booking>>(bList,HttpStatus.OK);
	}  

	
	@PostMapping
	   public ResponseEntity<String> createNewBooking(@RequestBody Booking booking) {
        try {
            
            if (isDuplicateBookingId(booking.getBooking_id())) {
                return new ResponseEntity<>("Duplicate booking for same movie. Booking not allowed.", HttpStatus.CONFLICT);
            }
            bookingRepository.save(booking);
            return new ResponseEntity<>("Movie Booked Successfully", HttpStatus.CREATED);
        }
        catch (Exception e) {
            
            return new ResponseEntity<>("Failed to book movie. Please check your request.", HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
    private boolean isDuplicateBookingId(long bookingId) {
        
        return bookingRepository.existsById(bookingId);
    }

	
}
































// New method to get a single booking by ID
//@GetMapping("/{id}")
//public ResponseEntity<Booking> getBookingById(@PathVariable long id) {
//  java.util.Optional<Booking> booking = bookingRepository.findById(id);
//
//  if (booking.isPresent()) {
//      return new ResponseEntity<>(booking.get(), HttpStatus.OK);
//  } else {
//      return new ResponseEntity<>(HttpStatus.NOT_FOUND);
//  }
//}
